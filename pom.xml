<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- General project settings. -->
    <name>OpenClinica RuleTranslator</name>
    <description>RuleTranslator for OpenClinica</description>
    <!--<url>https://github.com/something</url>-->
    <groupId>nl.vumc.ruletranslator</groupId>
    <artifactId>ruletranslator</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>


    <properties>
        <junit.version>4.11</junit.version>
        <junitparams.version>1.0.2</junitparams.version>

        <java-version>1.8</java-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
        <maven-checkstyle-plugin.version>2.12.1</maven-checkstyle-plugin.version>
        <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
        <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
        <findbugs-maven-plugin.version>3.0.0</findbugs-maven-plugin.version>
        <maven-pmd-plugin.version>3.2</maven-pmd-plugin.version>



    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- Dependency for JUnit. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${junitparams.version}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <dependencyManagement/>

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <directory>target</directory>

        <pluginManagement>
        <plugins>
            <!-- Specify Java 8 for sources and targets (.class files). -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <!-- Use maven-jar-plugin to create executable jar with the "mvn package" command. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>ruletranslator.gui.TranslateGUI</mainClass>
                            <classpathPrefix>dependency-jars/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Run Checkstyle in the verify phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>src/configuration/checkstyle.xml</configLocation>
                    <suppressionsLocation>src/configuration/checkstyle-suppressions.xml</suppressionsLocation>
                    <!--
                        Workaround for resolving the suppressions file in a Maven build: always check two
                        module levels above the current project. IDE builds should provide the config_loc
                        property, hence this setting will not influence the builds triggered in IDEs.
                    -->
                    <!--<propertyExpansion>config_loc=${project.parent.parent.basedir}/</propertyExpansion>-->
                    <failsOnError>true</failsOnError>
                </configuration>
            </plugin>

            <!-- Surefire runs the unit tests. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <!--suppress MavenModelInspection -->
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>

            <!-- This plugin reports general project information. -->
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>

        </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <!-- FindBugs configuration. See http://mojo.codehaus.org/findbugs-maven-plugin/ for more information. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
            </plugin>

            <!-- PMD ("Programming Mistake Detector") and CPD (Copy/Paste Detector) configuration. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <sourceEncoding>UTF-8</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${java-version}</targetJdk>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>